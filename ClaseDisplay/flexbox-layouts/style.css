* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 1.6rem;
}

.container {
  display: flex;
  border: 0.3rem solid black;
  align-items: center; /* Permite posicionar elementos dentrod del cross axis*/
  height: 400px;
}

.box1 {
  background: yellow;
}

.box2 {
  background-color: tomato;
}
.box3 {
  background-color: blue;
  order: -3;
  flex: 2 1 auto;
}
.box4 {
  background-color: chocolate;
}
.box5 {
  background-color: bisque;
}
.box6 {
  background-color: pink;
}

/* aling items flex start */
.container2 {
  display: flex;
  border: 0.3rem solid black;
  height: 400px;
  align-items: flex-start;
}

/* aling items stretch */
.container3 {
  display: flex;
  border: 0.3rem solid black;
  height: 400px;
  align-items: stretch; /* Afecta el crecimiento de un elemento, al parecer dentro del cross axis, si los items no tienen predefinidos un tama침o este elemento crecer치 hasta ocupar todo el espacio sobrante dentro del contendor*/
}

/* align items baseline */
.container4 {
  display: flex;
  border: 0.3rem solid black;
  align-items: baseline; /* Toma el espacio de su contenido sin efectar el sobrante del contendor */
}

/* flex: grow y flex: basis*/
/* basicamente se indica que los items dentro del contenedor se puedan ajustar para que no se salgan y gracias al flex: 1 1 10rem se est치 indicando que cada uno de los items pueda obtener un parte del espacio que sobra y que el tama침o del contenedor flex de cada uno de los items sea de 10rem es decir 100px */
.container5 {
  display: flex;
  border: 0.3rem solid black;
  flex-flow: row wrap;
}

.block1 {
  flex: 1 1 10rem;
  height: 10rem;
}

.block1:nth-child(even) {
  background-color: violet;
}
